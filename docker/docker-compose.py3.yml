version: '3.8.1'

services:
  redis:
    image: redis:5.0.5
    ports:
      - "6379:6379"
    networks:
      - airflow_postgres_py3

  postgres_airflow_py3:
    image: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: airflow
    volumes:
      - /home/PostgreSQL/airflow_py3:/var/lib/postgresql/data
    networks:
      - airflow_postgres_py3

  airflow_python3:
    image: base
    build:
      context: ..
      dockerfile: docker/airflow-py3.Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - /home/lucsomers/.aws:/root/.aws
      - /home/lucsomers/code/personal/etl-projects:/etl-projects
    depends_on:
      - postgres_airflow_py3
    networks:
      - airflow_postgres_py3

  worker:
    image: base
    restart: always
    environment:
      - C_FORCE_ROOT=true
    depends_on:
      - postgres_airflow_py3
    volumes:
      - /home/lucsomers/code/personal/etl-projects/etl_projects/dags:/etl-projects/etl_projects/dags
    entrypoint: airflow worker -cn worker
    healthcheck:
      test: ["CMD-SHELL", "[ -f /etl-projects/airflow_python/airflow-worker.pid ]"]
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - airflow_postgres_py3

networks:
  airflow_postgres_py3:
    driver: bridge